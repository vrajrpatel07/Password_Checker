import re

def password_strength_checker(password):
    """
    Checks the strength of a given password.

    Args:
        password (str): The password to check.

    Returns:
        dict: A dictionary containing the password strength results.
    """
    # Criteria to check
    checks = {
        'length': len(password) >= 8,
        'uppercase': any(c.isupper() for c in password),
        'lowercase': any(c.islower() for c in password),
        'numbers': any(c.isdigit() for c in password),
        'special_chars': any(c in "!@#$%^&*()_+=-{};:'<>,./?" for c in password)
    }

    # Calculate strength based on passed checks
    strength = sum(checks.values())

    # Map strength to a level (0-5)
    levels = ['Very Weak', 'Weak', 'Fair', 'Good', 'Strong', 'Very Strong']
    level = levels[strength]

    return {
        'results': checks,
        'strength': strength,
        'level': level
    }

# Example usage:
password = input("Enter a password: ")
results = password_strength_checker(password)

print("Password Strength Results:")
print("---------------------------")
for key, value in results['results'].items():
    print(f"{key.capitalize()}: {'Yes' if value else 'No'}")

print(f"\nPassword Strength: {results['strength']}/5")
print(f"Password Level: {results['level']}")